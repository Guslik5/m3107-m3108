#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct Tag
{
    char buffer[10];
    char signature[3];
    char version[1];
    char sub_version[1];
    char flag[1];
    unsigned char size[4];
} Tag;

typedef struct Frame
{
    char buffer[10];
    char ID[4];
    unsigned char size[4];
    char flag[2];
} Frame;

unsigned int Change_Size(unsigned char size[4])
{
    unsigned int res = 0;
    for (int i = 0; i < 4; i++)
        res |= size[3 - i] << (7 * i);
    return res;
}

void Back_Change_Size(unsigned int size, unsigned char *res)
{
    // printf("%d", size);
    for (int i = 1; i < 4; i++)
    {
        res[i] = (size << (7 * i)) >> 21;
    }
    res[0] = size >> 21;
}

void addTag(char buffer[], Tag *Tag)
{
    int j = 0;
    for (int i = 0; i < 10; i++)
    {
        if (i < 3)
            Tag->signature[i] = Tag->buffer[i];
        else if (i == 3)
            Tag->version[0] = Tag->buffer[i];
        else if (i == 4)
            Tag->sub_version[0] = Tag->buffer[i];
        else if (i == 5)
            Tag->flag[0] = Tag->buffer[i];
        else if (i > 5)
        {
            Tag->size[j] = Tag->buffer[i];
            j++;
        }
    }
}

void addFrame(char buffer[], Frame *Frame)
{
    int q = 0;
    int j = 0;
    for (int i = 0; i < 10; i++)
    {
        if (i < 4)
            Frame->ID[i] = Frame->buffer[i];
        else if ((i >= 4) && (i < 8))
        {
            Frame->size[j] = Frame->buffer[i];
            j++;
        }
        else if (i >= 8)
        {
            Frame->flag[q] = Frame->buffer[i];
            q++;
        }
    }
}

void show(FILE *file)
{
    Tag Tag;
    fread(Tag.buffer, sizeof(char), 10, file);
    addTag(Tag.buffer, &Tag);
    unsigned int tagsize;
    tagsize = Change_Size(Tag.size);
    printf("%.3sv2.%d\n", Tag.signature, Tag.version[0]);

    while (ftell(file) <= tagsize)
    {
        Frame Frame;
        fread(Frame.buffer, sizeof(char), 10, file);
        addFrame(Frame.buffer, &Frame);
        if (Frame.ID[0] == 0)
            break;
        unsigned int framesize;
        framesize = Change_Size(Frame.size);
        char arr[framesize];
        fread(arr, sizeof(char), framesize, file);
        printf("%.4s: ", Frame.ID);
        for (int i = 0; i < framesize; i++)
        {
            printf("%c", arr[i]);
        }
        printf("%c", '\n');
    }
}

void get(FILE *file, char prop_name[])
{
    Tag Tag;
    fread(Tag.buffer, sizeof(char), 10, file);
    addTag(Tag.buffer, &Tag);
    unsigned int tagsize;
    tagsize = Change_Size(Tag.size);
    while (ftell(file) <= tagsize)
    {
        Frame Frame;
        fread(Frame.buffer, sizeof(char), 10, file);
        addFrame(Frame.buffer, &Frame);
        if (Frame.ID[0] == 0)
            break;
        unsigned int framesize;
        framesize = Change_Size(Frame.size);
        if (strcmp(Frame.ID, prop_name) == 0)
        {
            printf("%s: ", Frame.ID);
            char arr[framesize];
            fread(arr, sizeof(char), framesize, file);
            for (int i = 0; i < framesize; i++)
            {
                printf("%c", arr[i]);
            }
        }
        else
        {
            fseek(file, framesize, 1);
        }
    }
}

void set(FILE *file, char prop_name[], char value[], char *file_name)
{
    int nowptr = 0;
    FILE *file2;
    file2 = fopen("C:\\Users\\Guslik\\Desktop\\copy.mp3", "wb");
    
    fseek(file, 0, SEEK_END);
    int lastptr = ftell(file);
    fseek(file, 0, SEEK_SET);
    Tag Tag;
    fread(Tag.buffer, sizeof(char), 10, file);
    addTag(Tag.buffer, &Tag);
    unsigned int tagsize;
    tagsize = Change_Size(Tag.size);
    while (ftell(file) <= tagsize)
    {
        Frame Frame;
        fread(Frame.buffer, sizeof(char), 10, file);
        addFrame(Frame.buffer, &Frame);
        if (Frame.ID[0] == 0)
            break;
        unsigned int framesize;
        framesize = Change_Size(Frame.size);
        if (strcmp(Frame.ID, prop_name) == 0)
        {
            char arr[framesize];
            fread(arr, sizeof(char), framesize, file);
            fseek(file, -10 - framesize, SEEK_CUR);
            nowptr = ftell(file);
            fseek(file, 0, SEEK_SET);
            tagsize = tagsize - framesize + strlen(value) + 1;
            Back_Change_Size(tagsize, Tag.size);

            tagsize = Change_Size(Tag.size);
            for (int i = 0; i < 6; i++)
            {
                char temp;
                temp = fgetc(file);
                fputc(temp, file2);
            }
            for (int i = 0; i < 4; i++)
            {
                fputc(Tag.size[i], file2);
            }
            fseek(file, 4, SEEK_CUR);

            while (ftell(file) < nowptr + 4)
            {
                char temp;
                temp = fgetc(file);
                fputc(temp, file2);
            }
            Back_Change_Size(strlen(value) + 1, Frame.size);
            for (int i = 0; i < 4; i++)
            {
                fputc(Frame.size[i], file2);
                fgetc(file);
            }
            for (int i = 0; i < 2; i++)
            {
                fputc(Frame.flag[i], file2);
                fgetc(file);
            }
            fputc('\0', file2);
            for (int i = 0; i < strlen(value); i++)
            {
                fputc(value[i], file2);
            }
            fseek(file, framesize, SEEK_CUR);
            while (ftell(file) < lastptr)
            {
                char temp;
                temp = fgetc(file);
                fputc(temp, file2);
            }
        }
        else
        {
            fseek(file, framesize, 1);
        }
    }
    fclose(file);
    fclose(file2);
    file2 = fopen("C:\\Users\\Guslik\\Desktop\\copy.mp3", "rb");
    file = fopen(file_name, "wb");
    while (!feof(file2))
    {
        char temp;
        temp = fgetc(file2);
        fputc(temp, file);
    }
}
int main(int argc, char **argv)
{
    char *file_name, *prop_name, *value;
    if (argc > 4)
    {
        printf("error");
        return 1;
    }
    else
    {
        if (strstr(argv[1], "--filepath"))
        {
            file_name = strpbrk(argv[1], "=") + 1;
            FILE *file = fopen(file_name, "rb");
            if (strcmp(argv[2], "--show") == 0)
            {
                if (argc != 3)
                {
                    printf("error");
                    return 1;
                }
                else
                    show(file);
            }
            else if (strstr(argv[2], "--get") != NULL)
            {
                if (argc != 3)
                {
                    printf("error");
                    return 1;
                }
                else
                {
                    prop_name = strpbrk(argv[2], "=") + 1;
                    get(file, prop_name);
                }
            }
            else if (strstr(argv[2], "--set") != NULL)
            {
                if (argc != 4)
                {
                    printf("error");
                    return 1;
                }
                else
                {
                    prop_name = strpbrk(argv[2], "=") + 1;
                    value = strpbrk(argv[3], "=") + 1;
                    set(file, prop_name, value, file_name);
                }
            }
        }
        else
        {
            printf("error");
            return 1;
        }
    }

    // FILE *file = fopen("bigbaby.mp3", "rb");
    // show(file);
    // char prop_name[5];
    // char value[9];
    // strcpy(value, "in dibil");
    // strcpy(prop_name, "TENC");
    // // get(file, prop_name);
    // // set(file, prop_name, value);

    return 0;
}


// Tag Tag;
    // fread(Tag.buffer, sizeof(char), 10, file);
    // addTag(Tag.buffer, &Tag);
    // unsigned int tagsize;
    // tagsize = Change_Size(Tag.size);
    // while (ftell(file) <= tagsize)
    // {
    //     int lastptr = fseek(file, 0, SEEK_END);
    //     Frame Frame;
    //     fread(Frame.buffer, sizeof(char), 10, file);
    //     addFrame(Frame.buffer, &Frame);
    //     if (Frame.ID[0] == 0)
    //         break;
    //     unsigned int framesize = 0;
    //     framesize = Change_Size(Frame.size);
    //     for (int i = 0; i < 4; i++)
    //     {
    //         printf("%c", Frame.ID[i]);
    //     }

    //     char arr[framesize];
    //     fread(arr, sizeof(char), framesize, file);

